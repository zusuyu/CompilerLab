decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

fun @main(): i32 {
%entry_main:
  @a_1 = alloc i32
  store 1, @a_1
  @b_1 = alloc i32
  store 2, @b_1
  jump %while_entry1
%while_entry1:
  %0 = load @a_1
  %1 = lt %0, 10
  br %1, %while_body1, %while_end1
%while_body1:
  %2 = load @a_1
  %3 = add %2, 1
  store %3, @a_1
  jump %while_entry2
%while_entry2:
  %4 = load @a_1
  %5 = lt %4, 5
  @result3 = alloc i32
  br %5, %then3, %else3
%then3:
  %6 = load @a_1
  %7 = lt %6, 5
  %8 = ne %7, 0
  store %8, @result3
  jump %end3
%else3:
  store 0, @result3
  jump %end3
%end3:
  %9 = load @result3
  br %9, %while_body2, %while_end2
%while_body2:
  %10 = load @b_1
  %11 = add %10, 1
  store %11, @b_1
  jump %while_entry2
%while_end2:
  jump %while_entry4
%while_entry4:
  %12 = load @b_1
  %13 = lt %12, 20
  br %13, %while_body4, %while_end4
%while_body4:
  jump %while_entry5
%while_entry5:
  %14 = load @b_1
  %15 = lt %14, 6
  @result6 = alloc i32
  br %15, %then6, %else6
%then6:
  store 1, @result6
  jump %end6
%else6:
  %16 = load @b_1
  %17 = eq %16, 6
  %18 = ne %17, 0
  store %18, @result6
  jump %end6
%end6:
  %19 = load @result6
  br %19, %while_body5, %while_end5
%while_body5:
  %20 = load @b_1
  %21 = add %20, 1
  store %21, @b_1
  jump %while_entry5
%while_end5:
  %22 = load @b_1
  %23 = add %22, 2
  store %23, @b_1
  jump %while_entry4
%while_end4:
  jump %while_entry1
%while_end1:
  %24 = load @a_1
  %25 = load @b_1
  %26 = add %24, %25
  ret %26
%ret_label1:
  ret 114514

}

